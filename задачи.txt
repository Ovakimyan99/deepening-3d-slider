Описание:
разработка фреймворка, позволяющего максимально нам настраивать слайдер.
  - реализация хранилища
  - сохранение состояния
  - реализация обработчиков события (actions)
  - подписки на прослушиватели
  - роутинг
  - страница админка / страница слайдер
  - возможно реализовать различные модели даже слайдеров + навигация

1) подгрузка необходимых файлов
- кнопочка для подгрузки картинок
- подгружаю файлы соответствующие требованиям (устанавливаю типы возможных только после клика, потом снова очищаю)

2) использование файлов для генерации контента
- пока файлы подгружаются, вместо них показывать лоадер, который я буду передавать
  (передаю по итогу html, который надо внедрить / отрендерить. Чтобы не было привязки к конкретному лоадеру, а было регулируемо)
- после загрузки файла вместо лоадера показывать сам файл

3) Стилизация слайдов
- возможность регулировать соотношение сторон текущего файл конента
- расположение блока: center, left, right (дефолтно будут чередоваться)
+ - отступ, то есть расстояние от предыдущего (пройденного), до этого
- добавление фона

4) Оптимизация
- отображать не больше 5:
  текущее количество активных слайдов 5. Остальные удаляются
  (скорее display none выставляется) и добавляются.
- у неактивных стили не пересчитывать
- кешировать файлы для моментальной прогрузки заново (рассмотреть удаление)

5) Определять высотку контейнера.
- зафиксировать разницу в высоте между переходами 2-х слайдов (сколько было проскроленно)
  и умножать на количество слайдов = высота контейнера для текущего пользователя
- если не получится, увеличивать по надобности

6) проверки последовательности контента
- чтобы не сделали плохой слайдер намеренно

7) lazy loading для загружаемых файлов

8) Скорость скролла
  - если скролл происходит быстро, выводить слайды по прицнипу:
    "через - через",
    иначе, как обычно


особенности к подгружаемым файлам:
ДЕФОЛТНЫЕ ЗНАЧЕНИЯ
-- у видео 
  autoplay
  loop
  muted

-- у аудио
  loop
  paused

-- расположение блоков
  слева - направо / справа - налево | в зависимости от выбора пользователя.
  потом каждый отдельный фрейм можно будет регулировать


--- доп реализация
  мини карта:
  когда пользователь только создает это добро, ему бы иметь перед глазами 2д карту,
  где показывалось:
  - РАСПОЛОЖЕНИЕ каждого слайда
  - наличие фона у слайдов
  - АВТОПРОВЕРКА для демонстрации рекомендации к добавлению фона
    (если идет картинка - текст - каринка, то перед
    текстом нужен фон, иначе будет сливаться)
  - отображение типа контента в каждой ячейке
  - остановиться на последнем: boolean
  
  -----------
  | 0 -- -- | - 0 - активная ячейка
  | -- 0 -- | - добавить под 0 полоску красную, сигнализирующую к тому, чтобы добавить фон
  | 0 -- -- | - черная полоска под 0 - пользователь добавил фон. Есть фон под этим слайдом
  | -- -- 0 | - вместо 0 выводить иконку, как тип контента: VID, IMG, TEXT
  | -- 0 -- |
  -----------

--- параметры текущего слайда
  справа / слева от карты отображать мини редактор определенных стилей,
  которые я предоставлю:
    расположение,
    шаблон html (отссылка к данным типа текст),
    цвета текста,
    цвет фона
    добавление / удаление контроллера на видео + ускорение


--- оптимизация permormance
  1456 ms  Scripting
  3476 ms  Rendering
  656 ms  Painting    | плохие показатели

  207 ms  Scripting
  403 ms  Rendering
  82 ms  Painting     | абсолютная оптимизация

  при наличии большого количества фреймов, все начинает тормозить.
  Мощности ноутбука даже не выдерживают.


пояснения:

данные для слайда, чтобы хранить и рендерить:
/*
  стили:
    фон:
      наличие
      цвет
    расположение контента OX
    размер контента: соотношение сторон
    цвет, если текст
  данные:
    отступ слайда от предыдущего до текущего
    тип отображаемого контента (генерируется для каждого слайда):
      аудио / видео плеер, изображение, текст
    файл контента / путь | текст / шаблон
    опции - настройки для контента (индивидуально для каждого слайда):
      - наличие проигрывателя,
      - ускорения аудио / видео (только если пред пункт true),
      - редактор html, если контент текст
      - onWhenDetected: когда доскролили до слайда, автоматом воспроизводится
            и выключается, когда уходят со слайда
  в данные тип не закидываем. Только файл контента.
  На ходу определяем тип контента, дальше уже загружаем нужны данные: файл / html.
*/

/*
  реализация изменения координат слайдера:
  исходно я задаю слайдам их стартовые позиции во время рендеринга.

  на этом этапе они статично стоят. Что делать, когда мы скроллим страницу?

  Дальше, для реализации движения можно рассмотреть 2 пути:
    перерендеринг html шаблона с новыми значениями
      - что из себя представляет этот путь?
        на каждый скролл мы перерисовываем html со всеми данными.
        Чистим, переопределяем значения, перевставляем.

        путь ресурсозатратный получается. Скорее аппарат умрет, чем
        страница поедет

      - можем отталкиваться от заданных значений слайдера
        в статичном состоянии.

        есть позиция z. Можем ее запистаь в data-attribute
        и при скролле переопределять ее значение и записывать
        новое в отредрененный html.

      Возникает вопрос:
        как обращаться к этим слайдам и изменять их параметры?
        
        Придумал!
        Ранее, я проверял, если ячейки скрыть, то затрат на перерисовку не уходит.
        Исходя из этого, значения я изменяю у всех, а отображаю только нужные.
        Включаю и выключаю

      Как реализовать это включение / выключение?
        это можно определить по накатанной схеме:
        Math.abc(zSpacing) / 1.6

      Когда изменять эти параметры?
        по факту, наш слайдер может находиться на разных частях страницы:
        доскроллен или не доскроллен, ПОЭТОМУ нам надо проверять, наша позиция экрана
        совпадает с позицией контейнера слайдера?
          если да, то мы можем запускать функцию изменения координат слайдера.

          Иначе, ничего не запускаем.

          Оптимизация через debounce

          когда проект отрендерится, все компоненты отрисуются, после этого
          создать обработчик на window для скролла. То есть по сути
          метод mounted
*/

/*
state:
  activeSlide: 3 - номер текущего слайда
*/

/*
activeIndex - точка начала

------А--А + confines----------> x
*/

/*
создать отдельный слой, где я бы инициализировал компоненты,
создавал дочерние компоненты, вызывал у них init, toHTML
создавал бы отдельного родителя, в который апендил бы html
*/

/*
реализовать getRoot в котором прорисовываю html 
& init, где подписываю на различные обработчики

и соответственно отписки нужны
*/
